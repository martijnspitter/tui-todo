# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - id: tui-todo
    main: ./cmd/tui-todo
    ldflags: >-
      -X 'github.com/martijnspitter/tui-todo/internal/version.version={{ .Version }}'
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin

archives:
  - formats: [tar.gz]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [zip]

changelog:
  use: github
  sort: asc
  groups:
    - title: "🚀 Features"
      regexp: "^feat[(\\w)]*:.*"
      order: 0
    - title: "🐛 Bug Fixes"
      regexp: "^fix[(\\w)]*:.*"
      order: 1
    - title: "🔧 Maintenance"
      regexp: "^(refactor|perf|style|chore)[(\\w)]*:.*"
      order: 2
    - title: "📚 Documentation"
      regexp: "^docs[(\\w)]*:.*"
      order: 3
    - title: "🧪 Tests"
      regexp: "^test[(\\w)]*:.*"
      order: 4
    - title: "🛠️ Build/CI"
      regexp: "^(build|ci)[(\\w)]*:.*"
      order: 5
  filters:
    exclude:
      - "^Merge pull request"
      - "^Merge branch"
  abbrev: 7 # Short commit hash length

brews:
  - name: tui-todo
    repository:
      owner: martijnspitter
      name: homebrew-tui-todo
      token: "{{ .Env.HOMEBREW_TAP_TOKEN }}"
    commit_author:
      name: goreleaserbot
      email: goreleaser@github.com
    homepage: "https://github.com/martijnspitter/tui-todo"
    description: |
      A feature-rich terminal-based todo application built with Go.
      Organize tasks with tags, priorities, and due dates without leaving your terminal.
    caveats: |
      Thank you for installing TUI Todo!
      Run 'todo' to start the application.
    license: "MIT"
    directory: Formula
    install: |
      bin.install "tui-todo" => "todo"  # This renames the binary when installing
    test: |
      system "#{bin}/todo", "--version"

nfpms:
  - id: tui-todo-packages
    package_name: todo
    file_name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

    # Reference the build ID
    ids:
      - tui-todo

    # Standard installation path
    bindir: /usr/bin

    # Package metadata
    vendor: Martijn Spitter
    homepage: https://github.com/martijnspitter/tui-todo
    maintainer: Martijn Spitter <info@martijnspitter.nl>
    description: |
      A feature-rich terminal-based todo application built with Go.
      Organize tasks with tags, priorities, and due dates without leaving your terminal.
    license: MIT
    # Dependencies
    dependencies:
      - libc6

    # Package formats
    formats:
      - deb
      - rpm
      - apk

    # Contents section allows you to add extra files or symlinks
    contents:
      # Create a symlink so the command is available as 'todo'
      - src: /usr/bin/tui-todo
        dst: /usr/bin/todo
        type: symlink

    # .deb specific
    deb:
      lintian_overrides:
        - statically-linked-binary

snapcrafts:
  - id: tui-todo
    name: todo
    title: TUI Todo
    summary: Terminal-based todo application
    description: |
      A feature-rich terminal-based todo application built with Go.
      Organize tasks with tags, priorities, and due dates without leaving your terminal.

    # Build metadata
    grade: stable
    confinement: strict
    base: core20

    # License information
    license: MIT

    # Publishing settings
    publish: true
    channel_templates:
      - edge
      - beta
      - candidate
      - stable

    # Reference the build
    ids:
      - tui-todo

    # App configuration
    apps:
      todo:
        command: tui-todo
        plugs:
          - home
          - network
          - personal-files

    # Additional permissions for accessing user files
    plugs:
      personal-files:
        read:
          - $HOME/.config/tui-todo
        write:
          - $HOME/.config/tui-todo
